# Solutions {.unnumbered}

## Explore

@exr-expl001 - Selection Pralines

Open the table [Pralines]{.varname}. Create a filter in column [ChocolateType]{.varname} and select only the values `Milk` and `Dark`. Click then in column [PralineCosts]{.varname} in a field with value `0.30`. Choose [tab Home \> Selection (group Sort & Filter) \> Less Than or Equal To \$ 0.30]{.uicontrol}.

@exr-expl002 - Selection Customers in city

Open table [Customers]{.varname}. Click on the arrow at the end of column head City and select only `Almelo`, `Enschede`, `Hengelo`.

@exr-expl003 - Selection Customers on zip code

Open the table [Customers]{.varname}. Click in column [City]{.varname} in a field with value `Amsterdam`. Choose [tab Home \> Selection (group Sort & Filter) \> Equals "Amsterdam"]{.uicontrol}. Click on the filter arrow at the end of column head [ZipCode]{.varname} and choose \[Text Filters \> Begins with ...\]{.uicontrol}. Enter `20` and click [OK]{.uicontrol}.

## Data

@exr-data001 - Adding pralines

Open form [Pralines]{.varname}. Click the button for a new record and add the pralines.

@exr-data002 - Add new order

First search in table [Customers]{.varname} for the CustomerCode of Rebecca Smit. This is `11`. Then open form [Orders]{.varname}. Navigate to the last order. This order has OrderCode `967`. The OrderCode for the new order is then `968`. Click button \[New Record\]{.uicontrol. Enter OrderCode 968, the OrderDate, and CustomerCode 11. In the subform at the bottom enter the data for the boxes CHER and MARZ.

To delete the boxes MARZ you open table [OrderDetails]{.varname}, navigate to the last order with OrderCode `968`. Select the row with MARZ, right mouse click, and select [Delete Record]{.uicontrol}.

## Tables

@exr-tabl001 - Prevent duplicate names

Open table Suppliers in Design View. At field [Supplier]{.varname}, set the property [Indexed]{.uicontrol} on [Yes (No Duplicates)]{.uicontrol}.

@exr-tabl002 - Insertion in names

A good solution is to add a new field named [Insertion]{.varname} to table [Customers]{.varname}. The value of field [LastName]{.varname} will be modified in `Molen` and the value of field [Insertion]{.varname} will be `van de`. Sorting on [LastName]{.varname} then gives the desired sequence. On the label, you put in one line the fields [FirstName]{.varname} [Insertion]{.varname} and [LastName]{.varname}.

@exr-tabl003 - Title field with a list box {-#sol-tabl003}

Open table [Customers]{.varname} in design view. Add field [Title]{.varname}. Set data type on [Lookup Wizard...]{.varname}. Specify in the next dialog that the values are typed. Only one column is necessary. In this column enter the values: ing., ir., drs., mr., dr. Use as caption text Title.

@exr-tabl004 - Currency format

Open table [Transport]{.varname} in Design View, select field [TransportationCosts]{.varname}, and change the value of property [Format]{.uicontrol} in a currency format with your local currency symbol.

@exr-tabl005 - Composite key

Open table [Transport]{.varname} in Design View. Select the fields [ID TransportCompany]{.varname} and [DeliveryProvince]{.varname}. Select [tab Design \> Primary Key (group Tools)]{.uicontrol}.

@exr-tabl006 - A field target group with a list box {-#sol-tabl006}

Open table [Customers]{.varname} in design view. Add field [TargetGroup]{.varname}. Set Data Type on \[Lookup Wizard...\]{.uicontrol. Specify in the next dialog that the values are typed. Only one column is necessary. In this column enter the values: top customer, good customer, small customer. Use as caption text Target Group.

@exr-tabl007 - Relationship BoxDetails-Pralines

The tables [BoxDetails]{.varname} and [Pralines]{.varname} have field PralineCode in common. [PralineCode]{.varname} is the key in table [Pralines]{.varname}; so [Pralines]{.varname} is the primary table (the one-side). A PralineCode can occur more than once in table [BoxDetails]{.varname}, so [BoxDetails]{.varname} is the many-side. Choose [tab Database Tools \> Relationships (group Relationships)]{.uicontrol}. Select field [PralineCode]{.varname} in table [Pralines]{.varname} and drag it to field [PralineCode]{.varname} in table [BoxDetails]{.varname}. Check the box [Enforce Referential Integrity]{.uicontrol}.

@exr-tabl008 - Table Employees

Import of the Excel file.

1.  Choose [tab External Data \> New Data Source (group Import & Link) \> From File \> Excel]{.uicontrol}.
2.  Select file `employees.xlsx` and choose [Import the source data into a new table in the current database]{.uicontrol}.
3.  Select option [First Row Contains Column Headings]{.uicontrol}.
4.  Change the Data Type of field [EmployeeCode]{.varname} to `Long Integer`.
5.  Make field [EmployeeCode]{.varname} the primary key.
6.  Name the new table [Employees]{.varname}.

Adding field.

1.  Open table \[Orders\] in Design View.
2.  Add a field with the name [EmployeeCode]{.varname} and with Data Type `Number` and the Field Size should be `Long Integer`.

Create a relationship.

1.  Choose tab Database Tools \> Relationships (group Relationships)\]{.uicontrol}.
2.  Choose tab Design \> Show Table (group Relationships\]{.uicontrol} and add table [Employees]{.varname}.
3.  Select field \[EmployeeCode\]{{.varname}} in table [Employees]{.varname} and drag it to field [EmployeeCode]{.varname} in table [Orders]{.varname}. Check the box [Enforce Referential Integrity]{.uicontrol}.

@exr-tabl009 - Contact registration

Normally you should start with an information analysis. The result should be which fields you need for table [Contacts]{.varname}, what will be the key, and which relationships through which fields. Therefore multiple solutions are possible. One solution could be as displayed in the next figure:

![](../images/tables/tabl009-contacts.png)

Considerations for this design and other designs:

-   Several contacts of a customer should be recorded. Hence a key field [ContactID]{.varname} and the field [CustomerCode]{.varname} (data type: Number - Long Integer) providing a link with table [Customers]{.varname}.

-   If table [Employees]{.varname} is available, then it is so convenient to be able to register which employee has handled the contact. In that case add field [EmployeeCode]{.varname} (data type: Number - Long Integer) providing a link with table [Employees]{.varname}.

-   Information analysis should give you the values for field [ContactType]{.varname}. For this field, you should create a list box with these values.

-   For the three date/time fields a suitable format should be selected, possibly with an input mask.

-   Information analysis should tell you how the costs are calculated. The processing time can be calculated from the start and end times, so it is process data and should therefore not be included in the table. If the hourly rate is a constant, then it can also be omitted from the table. In that case, there is nothing about the costs included in the table and the cost is calculated in a query or report. Varies the hourly rate or time, then the hourly rate should be included in the table.

@exr-tabl010 - Complaints registration

Normally you should start with an information analysis. The result should be which fields you need for table Complaints, what will be the key, and which relationships through which fields. Therefore multiple solutions are possible. A minimal solution could be as displayed in the next figure:

![](../images/tables/tabl010_complaints.png)

For the field [ComplaintType]{.varname} you should create a list box with the possible values.

A relationship should be created between this table and table [Orders]{.varname} through the field [OrderCode]{.varname} with referential integrity enforced.

Possible useful enhancements in this design are:

-   Date complaint.
-   A more detailed description of the complaint.
-   A Yes/No field whether the complaint has been handled.

@exr-tabl011 - Referential integrity

1.  Choose [tab Database Tools \> Relationships (group Relationships]{.uicontrol}.
2.  Double-click the relation line between two tables.
3.  Check [Enforce Referential Integrity]{.uicontrol}.

## Queries

@exr-quer001 - Customers from Friesland and Groningen

![](../images/queries/quer001-design1.png)

![](../images/queries/quer001-design2.png)

@exr-quer002 - Direct mail campaign box MARZ

![](../images/queries/quer002-design.png)

As a condition for OrderDate you can also use `Between #8/1/2010## And #11/30/2010#`

@exr-quer003 - Praline boxes with low price

![](../images/queries/quer003-design.png)

@exr-quer004 - Pralines milk and dark with low price

![](../images/queries/quer004-design.png)

@exr-quer005 - Customers from Enschede, Hengelo or Almelo

![](../images/queries/quer005-design.png)

As a condition for City you can also use "Enschede" Or "Hengelo" Or "Almelo"

@exr-quer006 - Customers from Amsterdam with zip code `20*`

![](../images/queries/quer006-design.png)

@exr-quer007 - Pralines without filling

![](../images/queries/quer007-design.png)

@exr-quer008 - Customers outside Amsterdam

![](../images/queries/quer008-design.png)

@exr-quer009 - Number of pralines per box

![](../images/queries/quer009-design.png)

@exr-quer010 - Number of praline types per box

![](../images/queries/quer010-design.png)

@exr-quer011 - Number of orders per region

![](../images/queries/quer011-design.png)

@exr-quer012 - Total sales per customer

![](../images/queries/quer012-design.png)

@exr-quer013 - Customers with orders

![](../images/queries/quer013-design.png)

@exr-quer014 - Customers with last name Jansen or Janssen in region North

![](../images/queries/quer014-design.png)

@exr-quer015 - Pralines with filling and without nut

![](../images/queries/quer015-design.png)

@exr-quer016 - Boxes heavier than 150 grams with a maximum price of \$35

![](../images/queries/quer016-design.png)

@exr-quer017 - Boxes with a price between \$17 and \$25 and stock of at least 400

![](../images/queries/quer017-design.png)

@exr-quer018 - Total sales per province

![](../images/queries/quer018-design.png)

@exr-quer019 - Customers with orders the week before Christmas

![](../images/queries/quer019-design.png)

@exr-quer020 - Boxes with low sales

![](../images/queries/quer020-design.png)

@exr-quer021 - Customers with zip code 22 and total sales less than \$50

![](../images/queries/quer021-design.png)

@exr-quer023 - Customers for Sweet and Bitter

![](../images/queries/quer023-design.png)

@exr-quer024 - Cities with at least 2 customers

![](../images/queries/quer024-design.png)

@exr-quer025 - Parameter chocolate type pralines

Create a new query with [Query Design]{.uicontrol}. Add table [Pralines]{.varname}. Add the fields [ChocolateType]{.varname}, [PralineName]{.varname}, [PralineCosts]{.varname} and [PralineDescription]{.varname}. Type in row [Criteria]{.uicontrol} in column [ChocolateType]{.varname} in: `[Enter chocolate type]`.

![](../images/queries/quer025-design.png)

@exr-quer026 - Update query price reduction

Create a new query with \[Query Design\]{.uicontrol. Add table [Boxes]{.varname}. Add the field [BoxPrice]{.varname}. Change query type in \[Update\]{.uicontrol. Type in field [Update To]{.uicontrol} the value `[BoxPrice]*0,85`.

![](../images/queries/quer026-design.png)

@exr-quer027 - Crosstab boxes per weight}

Choose [Create \> Query Wizard \> Crosstab Query Wizard]{.uicontrol}.

![](../images/queries/quer027-design.png)

@exr-quer028 - Update query price increase

Create through [Query Design]{.uicontrol} a new query, add table [Boxes]{.varname}, and add field [BoxPrice]{.varname}. Change Query Type in \[Update\]{.uicontrol. Enter in field [Update To]{.uicontrol} the value `[BoxPrice]*1.1`.

![](../images/queries/quer028-design.png)

@exr-quer029 - Crosstab sales per customer per month

You can create the selection query from scratch, but also create a copy of [quer012]{.varname} and change it then. Month number and year can be extracted from field [OrderDate]{.varname} with the functions`Month()` and `Year()`. Use value `2010` as criteria for the year.

![Design query Sales per customer per month in 2010](../images/queries/quer029-design-selection.png)

For the crosstab query choose [Create \> Query Wizard \> Crosstab QueryWizard]{.uicontrol}. Use query [Sales per customer per month in 2010]{.varname} as source. Use field [CustomerCode]{.varname} for the row heading, field [Month]{.varname} for the column heading, and `Sum(Sales)` for the values.

![Design crosstab query](../images/queries/quer029-design-crosstab.png)

## Forms

@exr-form001 - Customers

1.  Select table [Customers]{.varname}.
2.  Choose tab [Create \> Form (group Forms)]{.uicontrol}.
3.  [Design View]{.uicontrol}, remove the stacked layout, and make the changes in the layout.

@exr-form002 - Pralines in boxes

1.  Choose [tab Create \> Form Wizard]{.uicontrol}.
2.  Select table [Pralines]{.varname} and add all fields.
3.  Select table [BoxDetails]{.varname} and add fields [BoxCode]{.varname} and [Quantity]{.varname}.
4.  Form with subform and view the data by [Pralines]{.varname}.
5.  Choose Datasheet layout [form002-main]{.varname}.
6.  Modify layout.

@exr-form003 - Boxes per customer

1.  Choose [tab Create \> Query Design]{.uicontrol}. Add tables [Customers]{.varname}, [Orders]{.varname} and [OrderDetails]{.varname}. Add from table [Customers]{.varname} the fields [CustomerCode]{.varname} and [LastName]{.varname}. Add from table [OrderDetails]{.varname} the fields [BoxCode]{.varname} and [Quantity]{.varname}. Name the query [Boxes per customer]{.varname}.
2.  Choose [tab Create \> Form Wizard]{.uicontrol.
3.  Select table [Boxes]{.varname} and add all fields.
4.  Select query [Boxes per customer]{.varname} and add fields [CustomerCode]{.varname}, [LastName]{.varname}, and [Quantity]{.varname}.
5.  Form with subform and view the data by [Boxes]{.varname}.

## Reports

@exr-rapp001 - Sales per region per box

1.  Choose [tab Create \> Report Wizard (group (Reports)]{.uicontrol}.
2.  Choose as data source the query [Sales per region per box]{.varname} and add all fields. Set grouping level on field Region. Sort ascending on field [BoxName]{.varname}. Choose at [Summary Options]{.uicontrol} for `Sum`, show [Detail and Summary]{.uicontrol}, and [Calculate percent of total for sums]{.uicontrol}
3.  If necessary adjust column widths and formatting of the sales values.

@exr-rapp002 - Sales per box per region

1.  Choose [tab Create \> Report Wizard (group (Reports)]{.uicontrol}.
2.  Choose as data source the query [Sales per region per box]{.varname} and add all fields. Set grouping level on field [BoxName]{.varname}. Sort ascending on field [Region]{.varname}. Choose at [Summary Options]{.uicontrol} for `Sum`, show [Detail and Summary]{.uicontrol} and [Calculate percent of total for sums]{.uicontrol}. Choose layout [Stepped]{.uicontrol} and adjust the title.
3.  Adjust the layout.

@exr-rapp003 - Box and PralineCosts

1.  Choose [tab Create \> Report Wizard (group (Reports)]{.uicontrol}.
2.  Choose as data source the query [Pralines per box]{.varname} and add all fields. Set grouping level on field [Box]{.varname}. Sort ascending on field [Praline]{.varname}. Choose at [Summary Options]{.uicontrol} for `Sum`, show [Detail and Summary]{.uicontrol}. Choose layout [Blocked]{.uicontrol} and adjust the title.
3.  Adjust the layout.

@exr-rapp004 - Box and Praline costs grouped

1.  Copy and paste [rapp003]{.varname} and name the copy [rapp004]{.varname}.
2.  Open report [rapp004]{.varname} in Design View.
3.  Click on an empty spot in the section [Page Header]{.uicontrol} and change in Property Sheet (tab Format) the value of property [Force New Page]{.uicontrol} in `Before Section`.
4.  Adjust the layout.

@exr-rapp005 - Sales per box per order per period}

1.  Copy and paste report [Sales per box per order per period]{.varname} and name it [rapp005]{.varname}.
2.  Open report [rapp005]{.varname} in Design View.
3.  Move the boxes with the sum for quantity and sales to the section group header, to the right of the BoxName .

@exr-rapp006 - Box data on separated pages

1.  Copy and paste report [rapp005]{.varname} and name it [rapp006]{.varname}.
2.  Open report [rapp006]{.varname} in Design View
3.  Change property [Force New Page]{.uicontrol} for [BoxName]{.varname} in `Header`.

@exr-rapp007 - Box Labels

1.  Select table [Boxes]{.varname}.

2.  Choose [tab Create \> Labels (group reports)]{.uicontrol}.

3.  Select the correct label type.

4.  Set font type, size, weight, and color.

5.  Add fields and text, see prototype:

    ```{BoxName}

    Code  : {BoxCode}
    Weight: {Weight} gram
    ```

6.  Sort ascending on BoxCode.

@exr-rapp008 - Yearly sales per region

Create the following query:

![](../images/reports/rapp008-query.png)

Create a report with [tab Create \> Report Wizard (group (Reports)]{.uicontrol}. Base the report on query [Yearly sales per region]{.varname}. Add all fields and use [Region]{.varname} as grouping level. Customize the layout.

## Integration

@exr-intg001 - Standard letter

First, create the query. Choose [tab Create \> Query Design (group Queries)]{.uicontrol}. Add tables [Customers]{.varname}, [Orders]{.varname}, [OrderDetails]{.varname}, [Boxes]{.varname}, [BoxDetails]{.varname}, and [Pralines]{.varname}. Add from table [Customers]{.varname} the fields [LastName]{.varname}, [FirstName]{.varname}, [Address]{.varname}, [ZipCode]{.varname}, and [City]{.varname}. Add field [ChocolateType]{.varname} from table [Pralines]{.varname} with criteria `White`. Set in the Property Sheet at [Query Properties]{.uicontrol} the value of property [Unique Values]{.uicontrol} on `Yes`. Name the query [intg001]{.varname} and close it.

Right-click on the name of the just created query and choose [Export \> Word Merge]{.uicontrol}. Select the option to create a new document with linking data.

Insert the required fields and type the additional text, for example:

    <<FirstName>> <<LastName>>
    <<Address>>
    <<ZipCode>>  <<City>>

    Dear <<FirstName>>,
    We would like to offer you an offer for our newest box ...

Finish the merge in the usual way.

@exr-intg002 - Export customer data

1.  Right-click on table [Customers]{.varname} and choose [Export \> Excel]{.uicontrol}.
2.  Specify a filename and path and select option [Export data with formatting and layout]{.uicontrol}.
